plugins {
    id 'ata-curriculum.snippets-conventions'
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group = 'com.kenzie.unit.four'
version = '0.0.1-SNAPSHOT'

checkstyle {
    def suppressionFile = rootProject.file('Utilities/ATACheckstyle/configuration/checkstyle/unit3/suppressions.xml')
    configProperties.put('checkstyle.suppression.filter', suppressionFile)
}

dependencies {
    implementation project(":ServiceLambda")
    implementation project(":ServiceLambdaModel")
    implementation project(":ServiceLambdaJavaClient")
    implementation 'org.springframework:spring-context:5.3.15'
    implementation 'org.springframework:spring-core:5.3.15'
    implementation 'org.springframework:spring-beans:5.3.15'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.6.6'
    implementation 'org.springframework.cloud:spring-cloud-function-adapter-aws:3.2.2'

    implementation group: 'io.github.boostchicken', name: 'spring-data-dynamodb', version: '5.2.1'
    implementation 'io.springfox:springfox-swagger2:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    implementation 'com.google.guava:guava:32.0.0-android'
    implementation group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '2.9.3'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-cache', version: '2.6.3'

    implementation group: 'io.micrometer', name: 'micrometer-core', version: '1.8.3'
    implementation group: 'io.micrometer', name: 'micrometer-registry-prometheus', version: '1.8.3'
    implementation group: 'io.micrometer', name: 'micrometer-registry-cloudwatch2', version: '1.8.3'

    implementation group: 'org.springframework.cloud', name: 'spring-cloud-aws-actuator', version: '2.2.6.RELEASE'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-aws', version: '2.2.6.RELEASE'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.6'
    implementation group: 'redis.clients', name: 'jedis', version: '3.0.1'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:2.6.3'

    runtimeOnly group: 'software.amazon.awssdk', name: 'bom', version: '2.17.131', ext: 'pom'
    runtimeOnly 'org.apache.logging.log4j:log4j-slf4j18-impl:2.17.0'


    testImplementation("org.springframework.data:spring-data-commons:2.6.2")
    testImplementation("org.springframework:spring-tx:5.3.16")
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
    testImplementation group: 'org.testcontainers', name: 'testcontainers', version: '1.16.3'
    testImplementation'org.springframework.boot:spring-boot-starter-web:2.6.6'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'net.andreinc:mockneat:0.4.8'
    developmentOnly("org.springframework.boot:spring-boot-devtools")
}

processResources {
    expand(project.properties)
}

tasks.register('buildZip', Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

repositories {
    maven {
        url 'https://repo.maven.apache.org/maven2'
        name 'Maven Central'
    }
}

tasks.register('copyFrontend', Copy) {
    dependsOn(":Frontend:npm_run_build")

    from("../Frontend/dist")
    into("build/resources/main/static")
}

compileJava.dependsOn(copyFrontend)

tasks.register('bootRunDev') {
    bootRun.configure {
        systemProperty "server.error.whitelabel.enabled", 'false'
        systemProperty "spring.devtools.restart.enabled", 'true'
        systemProperty "compiler.automake.allow.when.app.running", 'true'
        systemProperty "spring.profiles.active", 'local'
    }
}

bootRunDev.finalizedBy bootRun
